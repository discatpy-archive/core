# SPDX-License-Identifier: MIT

# this file was auto-generated by scripts/generate_endpoints.py

import typing as t

import discord_typings as dt

from ...types import Unset, UnsetOr
from ..route import Route
from .core import EndpointMixin

__all__ = ("UserEndpoints",)


class UserEndpoints(EndpointMixin):
    def get_current_user(self):
        return self.request(Route("GET", "/users/@me"))

    def get_user(self, user_id: dt.Snowflake):
        return self.request(Route("GET", "/users/{user_id}", user_id=user_id))

    def modify_current_user(
        self, *, username: UnsetOr[str] = Unset, avatar: UnsetOr[t.Optional[str]] = Unset
    ):
        return self.request(
            Route("PATCH", "/users/@me"), json_params={"username": username, "avatar": avatar}
        )

    def get_current_user_guilds(
        self,
        *,
        before: UnsetOr[dt.Snowflake] = Unset,
        after: UnsetOr[dt.Snowflake] = Unset,
        limit: int = 200,
    ):
        return self.request(
            Route("GET", "/users/@me/guilds"),
            query_params={"before": before, "after": after, "limit": limit},
        )

    def get_current_user_guild_member(self, guild_id: dt.Snowflake):
        return self.request(Route("GET", "/users/@me/guilds/{guild_id}/member", guild_id=guild_id))

    def leave_guild(self, guild_id: dt.Snowflake):
        return self.request(Route("DELETE", "/users/@me/guilds/{guild_id}", guild_id=guild_id))

    def create_dm(self, *, recipient_id: dt.Snowflake):
        return self.request(
            Route("POST", "/users/@me/channels"), json_params={"recipient_id": recipient_id}
        )

    def get_user_connections(self):
        return self.request(Route("GET", "/users/@me/connections"))
